name: Deploy Electron Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      # Git Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Install Dependencies
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Set GH_TOKEN as environment variable
      - name: Set GH_TOKEN
        run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV

      # Install Chocolatey and 7-Zip
      - name: Install Chocolatey and 7-Zip
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          choco install 7zip -y

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Build Electron Application
      - name: Build Electron Application
        run: |
          npm install
          python --version
          npm run deploy:win64
          npm run deploy:django

      # Deploy to Desired Location
      - name: Copy Artifacts
        run: |
          mkdir deploy\python\dist
          copy dist\* deploy\
          copy python\dist\manage.exe deploy\python\dist
          # Add more commands to organize the artifacts in the deploy directory

      # Create Release Archive
      - name: Create Release Archive
        run: |
          cd deploy
          7z a -tzip release-win.zip *
          # tar -czvf release-win.tar.gz *
          # If you're deploying on Windows, use 7zip or other appropriate tool

      # Upload Release Archive
      - name: Upload Release Archive
        uses: actions/upload-artifact@v2
        with:
          name: release-win
          path: deploy\release-win.zip
